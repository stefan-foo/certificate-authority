/*
 * This file is generated by jOOQ.
 */
package rs.elfak.caprovider.db.tables.interfaces;


import java.io.Serializable;
import java.math.BigInteger;
import java.time.LocalDateTime;

import rs.elfak.caprovider.db.enums.SubjectType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ICertificate extends Serializable {

    /**
     * Setter for <code>certificate.id</code>.
     */
    public void setId(Integer value);

    /**
     * Getter for <code>certificate.id</code>.
     */
    public Integer getId();

    /**
     * Setter for <code>certificate.alias</code>.
     */
    public void setAlias(String value);

    /**
     * Getter for <code>certificate.alias</code>.
     */
    public String getAlias();

    /**
     * Setter for <code>certificate.subject_name</code>.
     */
    public void setSubjectName(String value);

    /**
     * Getter for <code>certificate.subject_name</code>.
     */
    public String getSubjectName();

    /**
     * Setter for <code>certificate.subject_key_id</code>.
     */
    public void setSubjectKeyId(byte[] value);

    /**
     * Getter for <code>certificate.subject_key_id</code>.
     */
    public byte[] getSubjectKeyId();

    /**
     * Setter for <code>certificate.subject_type</code>.
     */
    public void setSubjectType(SubjectType value);

    /**
     * Getter for <code>certificate.subject_type</code>.
     */
    public SubjectType getSubjectType();

    /**
     * Setter for <code>certificate.cert_der</code>.
     */
    public void setCertDer(byte[] value);

    /**
     * Getter for <code>certificate.cert_der</code>.
     */
    public byte[] getCertDer();

    /**
     * Setter for <code>certificate.private_key_en</code>.
     */
    public void setPrivateKeyEn(byte[] value);

    /**
     * Getter for <code>certificate.private_key_en</code>.
     */
    public byte[] getPrivateKeyEn();

    /**
     * Setter for <code>certificate.valid_from</code>.
     */
    public void setValidFrom(LocalDateTime value);

    /**
     * Getter for <code>certificate.valid_from</code>.
     */
    public LocalDateTime getValidFrom();

    /**
     * Setter for <code>certificate.valid_to</code>.
     */
    public void setValidTo(LocalDateTime value);

    /**
     * Getter for <code>certificate.valid_to</code>.
     */
    public LocalDateTime getValidTo();

    /**
     * Setter for <code>certificate.revocation_message</code>.
     */
    public void setRevocationMessage(String value);

    /**
     * Getter for <code>certificate.revocation_message</code>.
     */
    public String getRevocationMessage();

    /**
     * Setter for <code>certificate.issuing_certificate</code>.
     */
    public void setIssuingCertificate(Integer value);

    /**
     * Getter for <code>certificate.issuing_certificate</code>.
     */
    public Integer getIssuingCertificate();

    /**
     * Setter for <code>certificate.serial_number</code>.
     */
    public void setSerialNumber(BigInteger value);

    /**
     * Getter for <code>certificate.serial_number</code>.
     */
    public BigInteger getSerialNumber();

    /**
     * Setter for <code>certificate.revocation_code</code>.
     */
    public void setRevocationCode(Integer value);

    /**
     * Getter for <code>certificate.revocation_code</code>.
     */
    public Integer getRevocationCode();

    /**
     * Setter for <code>certificate.revocation_date</code>.
     */
    public void setRevocationDate(LocalDateTime value);

    /**
     * Getter for <code>certificate.revocation_date</code>.
     */
    public LocalDateTime getRevocationDate();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface ICertificate
     */
    public void from(ICertificate from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface ICertificate
     */
    public <E extends ICertificate> E into(E into);
}
